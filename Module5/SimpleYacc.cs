// This code was generated by the Gardens Point Parser Generator
// Copyright (c) Wayne Kelly, QUT 2005-2010
// (see accompanying GPPGcopyright.rtf)

// GPPG version 1.3.6
// Machine:  DESKTOP-TPAIPAV
// DateTime: 16.10.2023 21:28:11
// UserName: ymayma
// Input file <SimpleYacc.y>

// options: no-lines gplex

using System;
using System.Collections.Generic;
using System.Globalization;
using System.Text;
using QUT.Gppg;

namespace SimpleParser
{
public enum Tokens {
    error=1,EOF=2,ID=3,COLON=4,SEMICOLON=5,ASSIGN=6,
    COMMA=7,RANGE=8,PLUS=9,MINUS=10,MULT=11,DIVISION=12,
    MOD=13,DIV=14,MULTASSIGN=15,DIVISIONASSIGN=16,PLUSASSIGN=17,MINUSASSIGN=18,
    DIVASSIGN=19,MODASSIGN=20,AND=21,OR=22,NOT=23,LT=24,
    GT=25,LEQ=26,GEQ=27,EQ=28,NEQ=29,WHILE=30,
    FOR=31,IF=32,ELSE=33,BEGIN=34,END=35,FUNCTION=36,
    LEFT_BRACKET=37,RIGHT_BRACKET=38,LEFT_SQUARE_BRACKET=39,RIGHT_SQUARE_BRACKET=40,INT=41,FLOAT=42,
    SYMBOL=43,TEXT=44,INT_VAL=45,FLOAT_VAL=46,SYMBOL_VAL=47,TEXT_VAL=48};

// Abstract base class for GPLEX scanners
public abstract class ScanBase : AbstractScanner<int,LexLocation> {
  private LexLocation __yylloc = new LexLocation();
  public override LexLocation yylloc { get { return __yylloc; } set { __yylloc = value; } }
  protected virtual bool yywrap() { return true; }
}

public class Parser: ShiftReduceParser<int, LexLocation>
{
  // Verbatim content from SimpleYacc.y
// Ёти объ€влени€ добавл€ютс€ в класс GPPGParser, представл€ющий собой парсер, генерируемый системой gppg
    public Parser(AbstractScanner<int, LexLocation> scanner) : base(scanner) { }
  // End verbatim content from SimpleYacc.y

#pragma warning disable 649
  private static Dictionary<int, string> aliasses;
#pragma warning restore 649
  private static Rule[] rules = new Rule[103];
  private static State[] states = new State[171];
  private static string[] nonTerms = new string[] {
      "progr", "$accept", "st_f_list", "var_decl", "func_decl", "block", "st_list", 
      "statement", "func_call", "assign_st", "if_st", "while_st", "for_st", "params_list", 
      "ret_params", "template_params", "template_params_list", "param", "type", 
      "template_param", "comp_term", "expr_list", "templ_args", "comp_term_list", 
      "decl_list", "decl", "expr", "log_op_term", "log_term", "log_op", "comp_op_term", 
      "comp_op", "op_term", "term", "add_op", "op_factor", "factor", "mult_op", 
      "un_op", "else_st", "range_st", };

  static Parser() {
    states[0] = new State(new int[]{41,79,42,80,44,81,43,82,36,83},new int[]{-1,1,-3,3,-4,168,-19,7,-5,170});
    states[1] = new State(new int[]{2,2});
    states[2] = new State(-1);
    states[3] = new State(new int[]{41,79,42,80,44,81,43,82,36,83,2,-2},new int[]{-4,4,-5,6,-19,7});
    states[4] = new State(new int[]{5,5});
    states[5] = new State(-3);
    states[6] = new State(-4);
    states[7] = new State(new int[]{3,11},new int[]{-25,8,-26,78,-10,77});
    states[8] = new State(new int[]{7,9,5,-45});
    states[9] = new State(new int[]{3,11},new int[]{-26,10,-10,77});
    states[10] = new State(-50);
    states[11] = new State(new int[]{6,12,7,-52,5,-52});
    states[12] = new State(new int[]{3,40,45,54,46,55,47,56,48,57,37,58,23,68,10,69},new int[]{-27,13,-28,14,-29,61,-31,19,-21,63,-33,28,-34,50,-36,33,-37,52,-9,65,-39,66});
    states[13] = new State(-56);
    states[14] = new State(new int[]{3,40,45,54,46,55,47,56,48,57,37,58,23,68,10,69},new int[]{-29,15,-31,19,-21,63,-33,28,-34,50,-36,33,-37,52,-9,65,-39,66});
    states[15] = new State(new int[]{21,17,22,18,7,-57,5,-57,38,-57},new int[]{-30,16});
    states[16] = new State(-59);
    states[17] = new State(-93);
    states[18] = new State(-94);
    states[19] = new State(new int[]{3,40,45,54,46,55,47,56,48,57,37,58,23,68,10,69},new int[]{-21,20,-33,28,-34,50,-36,33,-37,52,-9,65,-39,66});
    states[20] = new State(new int[]{24,22,25,23,26,24,27,25,28,26,29,27,21,-61,22,-61,7,-61,5,-61,38,-61},new int[]{-32,21});
    states[21] = new State(-63);
    states[22] = new State(-87);
    states[23] = new State(-88);
    states[24] = new State(-89);
    states[25] = new State(-90);
    states[26] = new State(-91);
    states[27] = new State(-92);
    states[28] = new State(new int[]{3,40,45,54,46,55,47,56,48,57,37,58,23,68,10,69},new int[]{-34,29,-36,33,-37,52,-9,65,-39,66});
    states[29] = new State(new int[]{9,31,10,32,24,-65,25,-65,26,-65,27,-65,28,-65,29,-65,21,-65,22,-65,7,-65,5,-65,38,-65,8,-65},new int[]{-35,30});
    states[30] = new State(-67);
    states[31] = new State(-81);
    states[32] = new State(-82);
    states[33] = new State(new int[]{3,40,45,54,46,55,47,56,48,57,37,58,23,68,10,69},new int[]{-37,34,-9,65,-39,66});
    states[34] = new State(new int[]{11,36,12,37,13,38,14,39,9,-69,10,-69,24,-69,25,-69,26,-69,27,-69,28,-69,29,-69,21,-69,22,-69,7,-69,5,-69,38,-69,8,-69},new int[]{-38,35});
    states[35] = new State(-71);
    states[36] = new State(-83);
    states[37] = new State(-84);
    states[38] = new State(-85);
    states[39] = new State(-86);
    states[40] = new State(new int[]{37,41,11,-73,12,-73,13,-73,14,-73,9,-73,10,-73,24,-73,25,-73,26,-73,27,-73,28,-73,29,-73,21,-73,22,-73,7,-73,5,-73,38,-73,8,-73});
    states[41] = new State(new int[]{38,74,3,40,45,54,46,55,47,56,48,57,37,58,23,68,10,69},new int[]{-22,42,-27,76,-28,14,-29,61,-31,19,-21,63,-33,28,-34,50,-36,33,-37,52,-9,65,-39,66});
    states[42] = new State(new int[]{38,43,7,72});
    states[43] = new State(new int[]{24,45,11,-38,12,-38,13,-38,14,-38,9,-38,10,-38,25,-38,26,-38,27,-38,28,-38,29,-38,21,-38,22,-38,7,-38,5,-38,38,-38,8,-38},new int[]{-23,44});
    states[44] = new State(-37);
    states[45] = new State(new int[]{25,70,3,40,45,54,46,55,47,56,48,57,37,58,23,68,10,69},new int[]{-24,46,-21,71,-33,28,-34,50,-36,33,-37,52,-9,65,-39,66});
    states[46] = new State(new int[]{25,47,7,48});
    states[47] = new State(-41);
    states[48] = new State(new int[]{3,40,45,54,46,55,47,56,48,57,37,58,23,68,10,69},new int[]{-21,49,-33,28,-34,50,-36,33,-37,52,-9,65,-39,66});
    states[49] = new State(-43);
    states[50] = new State(new int[]{9,31,10,32,24,-66,25,-66,26,-66,27,-66,28,-66,29,-66,21,-66,22,-66,7,-66,5,-66,38,-66,8,-66},new int[]{-35,51});
    states[51] = new State(-68);
    states[52] = new State(new int[]{11,36,12,37,13,38,14,39,9,-70,10,-70,24,-70,25,-70,26,-70,27,-70,28,-70,29,-70,21,-70,22,-70,7,-70,5,-70,38,-70,8,-70},new int[]{-38,53});
    states[53] = new State(-72);
    states[54] = new State(-74);
    states[55] = new State(-75);
    states[56] = new State(-76);
    states[57] = new State(-77);
    states[58] = new State(new int[]{3,40,45,54,46,55,47,56,48,57,37,58,23,68,10,69},new int[]{-27,59,-28,14,-29,61,-31,19,-21,63,-33,28,-34,50,-36,33,-37,52,-9,65,-39,66});
    states[59] = new State(new int[]{38,60});
    states[60] = new State(-78);
    states[61] = new State(new int[]{21,17,22,18,7,-58,5,-58,38,-58},new int[]{-30,62});
    states[62] = new State(-60);
    states[63] = new State(new int[]{24,22,25,23,26,24,27,25,28,26,29,27,21,-62,22,-62,7,-62,5,-62,38,-62},new int[]{-32,64});
    states[64] = new State(-64);
    states[65] = new State(-79);
    states[66] = new State(new int[]{3,40,45,54,46,55,47,56,48,57,37,58,23,68,10,69},new int[]{-37,67,-9,65,-39,66});
    states[67] = new State(-80);
    states[68] = new State(-95);
    states[69] = new State(-96);
    states[70] = new State(-42);
    states[71] = new State(-44);
    states[72] = new State(new int[]{3,40,45,54,46,55,47,56,48,57,37,58,23,68,10,69},new int[]{-27,73,-28,14,-29,61,-31,19,-21,63,-33,28,-34,50,-36,33,-37,52,-9,65,-39,66});
    states[73] = new State(-54);
    states[74] = new State(new int[]{24,45,11,-40,12,-40,13,-40,14,-40,9,-40,10,-40,25,-40,26,-40,27,-40,28,-40,29,-40,21,-40,22,-40,7,-40,5,-40,38,-40,8,-40},new int[]{-23,75});
    states[75] = new State(-39);
    states[76] = new State(-55);
    states[77] = new State(-53);
    states[78] = new State(-51);
    states[79] = new State(-46);
    states[80] = new State(-47);
    states[81] = new State(-48);
    states[82] = new State(-49);
    states[83] = new State(new int[]{3,84});
    states[84] = new State(new int[]{37,85});
    states[85] = new State(new int[]{38,160,41,79,42,80,44,81,43,82,36,156},new int[]{-14,86,-18,159,-19,154});
    states[86] = new State(new int[]{38,87,7,152});
    states[87] = new State(new int[]{39,149,24,131,34,91},new int[]{-15,88,-16,146,-6,148});
    states[88] = new State(new int[]{24,131,34,91},new int[]{-16,89,-6,130});
    states[89] = new State(new int[]{34,91},new int[]{-6,90});
    states[90] = new State(-17);
    states[91] = new State(new int[]{35,128,3,97,41,79,42,80,44,81,43,82,32,103,30,112,31,118},new int[]{-7,92,-8,129,-9,95,-4,98,-19,7,-10,100,-11,102,-12,111,-13,117});
    states[92] = new State(new int[]{35,93,3,97,41,79,42,80,44,81,43,82,32,103,30,112,31,118},new int[]{-8,94,-9,95,-4,98,-19,7,-10,100,-11,102,-12,111,-13,117});
    states[93] = new State(-7);
    states[94] = new State(-9);
    states[95] = new State(new int[]{5,96});
    states[96] = new State(-11);
    states[97] = new State(new int[]{37,41,6,12});
    states[98] = new State(new int[]{5,99});
    states[99] = new State(-12);
    states[100] = new State(new int[]{5,101});
    states[101] = new State(-13);
    states[102] = new State(-14);
    states[103] = new State(new int[]{37,104});
    states[104] = new State(new int[]{3,40,45,54,46,55,47,56,48,57,37,58,23,68,10,69},new int[]{-27,105,-28,14,-29,61,-31,19,-21,63,-33,28,-34,50,-36,33,-37,52,-9,65,-39,66});
    states[105] = new State(new int[]{38,106});
    states[106] = new State(new int[]{34,91},new int[]{-6,107});
    states[107] = new State(new int[]{33,109,35,-98,3,-98,41,-98,42,-98,44,-98,43,-98,32,-98,30,-98,31,-98},new int[]{-40,108});
    states[108] = new State(-97);
    states[109] = new State(new int[]{34,91},new int[]{-6,110});
    states[110] = new State(-99);
    states[111] = new State(-15);
    states[112] = new State(new int[]{37,113});
    states[113] = new State(new int[]{3,40,45,54,46,55,47,56,48,57,37,58,23,68,10,69},new int[]{-27,114,-28,14,-29,61,-31,19,-21,63,-33,28,-34,50,-36,33,-37,52,-9,65,-39,66});
    states[114] = new State(new int[]{38,115});
    states[115] = new State(new int[]{34,91},new int[]{-6,116});
    states[116] = new State(-100);
    states[117] = new State(-16);
    states[118] = new State(new int[]{37,119});
    states[119] = new State(new int[]{3,120});
    states[120] = new State(new int[]{6,121});
    states[121] = new State(new int[]{3,40,45,54,46,55,47,56,48,57,37,58,23,68,10,69},new int[]{-41,122,-21,125,-33,28,-34,50,-36,33,-37,52,-9,65,-39,66});
    states[122] = new State(new int[]{38,123});
    states[123] = new State(new int[]{34,91},new int[]{-6,124});
    states[124] = new State(-101);
    states[125] = new State(new int[]{8,126});
    states[126] = new State(new int[]{3,40,45,54,46,55,47,56,48,57,37,58,23,68,10,69},new int[]{-21,127,-33,28,-34,50,-36,33,-37,52,-9,65,-39,66});
    states[127] = new State(-102);
    states[128] = new State(-8);
    states[129] = new State(-10);
    states[130] = new State(-18);
    states[131] = new State(new int[]{25,144,41,79,42,80,44,81,43,82,36,140},new int[]{-17,132,-20,145,-19,136});
    states[132] = new State(new int[]{25,133,7,134});
    states[133] = new State(-27);
    states[134] = new State(new int[]{41,79,42,80,44,81,43,82,36,140},new int[]{-20,135,-19,136});
    states[135] = new State(-33);
    states[136] = new State(new int[]{3,137});
    states[137] = new State(new int[]{6,138});
    states[138] = new State(new int[]{3,40,45,54,46,55,47,56,48,57,37,58,23,68,10,69},new int[]{-21,139,-33,28,-34,50,-36,33,-37,52,-9,65,-39,66});
    states[139] = new State(-35);
    states[140] = new State(new int[]{3,141});
    states[141] = new State(new int[]{6,142});
    states[142] = new State(new int[]{3,143});
    states[143] = new State(-36);
    states[144] = new State(-28);
    states[145] = new State(-34);
    states[146] = new State(new int[]{34,91},new int[]{-6,147});
    states[147] = new State(-19);
    states[148] = new State(-20);
    states[149] = new State(new int[]{40,158,41,79,42,80,44,81,43,82,36,156},new int[]{-14,150,-18,159,-19,154});
    states[150] = new State(new int[]{40,151,7,152});
    states[151] = new State(-25);
    states[152] = new State(new int[]{41,79,42,80,44,81,43,82,36,156},new int[]{-18,153,-19,154});
    states[153] = new State(-29);
    states[154] = new State(new int[]{3,155});
    states[155] = new State(-31);
    states[156] = new State(new int[]{3,157});
    states[157] = new State(-32);
    states[158] = new State(-26);
    states[159] = new State(-30);
    states[160] = new State(new int[]{39,149,24,131,34,91},new int[]{-15,161,-16,165,-6,167});
    states[161] = new State(new int[]{24,131,34,91},new int[]{-16,162,-6,164});
    states[162] = new State(new int[]{34,91},new int[]{-6,163});
    states[163] = new State(-21);
    states[164] = new State(-22);
    states[165] = new State(new int[]{34,91},new int[]{-6,166});
    states[166] = new State(-23);
    states[167] = new State(-24);
    states[168] = new State(new int[]{5,169});
    states[169] = new State(-5);
    states[170] = new State(-6);

    rules[1] = new Rule(-2, new int[]{-1,2});
    rules[2] = new Rule(-1, new int[]{-3});
    rules[3] = new Rule(-3, new int[]{-3,-4,5});
    rules[4] = new Rule(-3, new int[]{-3,-5});
    rules[5] = new Rule(-3, new int[]{-4,5});
    rules[6] = new Rule(-3, new int[]{-5});
    rules[7] = new Rule(-6, new int[]{34,-7,35});
    rules[8] = new Rule(-6, new int[]{34,35});
    rules[9] = new Rule(-7, new int[]{-7,-8});
    rules[10] = new Rule(-7, new int[]{-8});
    rules[11] = new Rule(-8, new int[]{-9,5});
    rules[12] = new Rule(-8, new int[]{-4,5});
    rules[13] = new Rule(-8, new int[]{-10,5});
    rules[14] = new Rule(-8, new int[]{-11});
    rules[15] = new Rule(-8, new int[]{-12});
    rules[16] = new Rule(-8, new int[]{-13});
    rules[17] = new Rule(-5, new int[]{36,3,37,-14,38,-15,-16,-6});
    rules[18] = new Rule(-5, new int[]{36,3,37,-14,38,-15,-6});
    rules[19] = new Rule(-5, new int[]{36,3,37,-14,38,-16,-6});
    rules[20] = new Rule(-5, new int[]{36,3,37,-14,38,-6});
    rules[21] = new Rule(-5, new int[]{36,3,37,38,-15,-16,-6});
    rules[22] = new Rule(-5, new int[]{36,3,37,38,-15,-6});
    rules[23] = new Rule(-5, new int[]{36,3,37,38,-16,-6});
    rules[24] = new Rule(-5, new int[]{36,3,37,38,-6});
    rules[25] = new Rule(-15, new int[]{39,-14,40});
    rules[26] = new Rule(-15, new int[]{39,40});
    rules[27] = new Rule(-16, new int[]{24,-17,25});
    rules[28] = new Rule(-16, new int[]{24,25});
    rules[29] = new Rule(-14, new int[]{-14,7,-18});
    rules[30] = new Rule(-14, new int[]{-18});
    rules[31] = new Rule(-18, new int[]{-19,3});
    rules[32] = new Rule(-18, new int[]{36,3});
    rules[33] = new Rule(-17, new int[]{-17,7,-20});
    rules[34] = new Rule(-17, new int[]{-20});
    rules[35] = new Rule(-20, new int[]{-19,3,6,-21});
    rules[36] = new Rule(-20, new int[]{36,3,6,3});
    rules[37] = new Rule(-9, new int[]{3,37,-22,38,-23});
    rules[38] = new Rule(-9, new int[]{3,37,-22,38});
    rules[39] = new Rule(-9, new int[]{3,37,38,-23});
    rules[40] = new Rule(-9, new int[]{3,37,38});
    rules[41] = new Rule(-23, new int[]{24,-24,25});
    rules[42] = new Rule(-23, new int[]{24,25});
    rules[43] = new Rule(-24, new int[]{-24,7,-21});
    rules[44] = new Rule(-24, new int[]{-21});
    rules[45] = new Rule(-4, new int[]{-19,-25});
    rules[46] = new Rule(-19, new int[]{41});
    rules[47] = new Rule(-19, new int[]{42});
    rules[48] = new Rule(-19, new int[]{44});
    rules[49] = new Rule(-19, new int[]{43});
    rules[50] = new Rule(-25, new int[]{-25,7,-26});
    rules[51] = new Rule(-25, new int[]{-26});
    rules[52] = new Rule(-26, new int[]{3});
    rules[53] = new Rule(-26, new int[]{-10});
    rules[54] = new Rule(-22, new int[]{-22,7,-27});
    rules[55] = new Rule(-22, new int[]{-27});
    rules[56] = new Rule(-10, new int[]{3,6,-27});
    rules[57] = new Rule(-27, new int[]{-28,-29});
    rules[58] = new Rule(-27, new int[]{-29});
    rules[59] = new Rule(-28, new int[]{-28,-29,-30});
    rules[60] = new Rule(-28, new int[]{-29,-30});
    rules[61] = new Rule(-29, new int[]{-31,-21});
    rules[62] = new Rule(-29, new int[]{-21});
    rules[63] = new Rule(-31, new int[]{-31,-21,-32});
    rules[64] = new Rule(-31, new int[]{-21,-32});
    rules[65] = new Rule(-21, new int[]{-33,-34});
    rules[66] = new Rule(-21, new int[]{-34});
    rules[67] = new Rule(-33, new int[]{-33,-34,-35});
    rules[68] = new Rule(-33, new int[]{-34,-35});
    rules[69] = new Rule(-34, new int[]{-36,-37});
    rules[70] = new Rule(-34, new int[]{-37});
    rules[71] = new Rule(-36, new int[]{-36,-37,-38});
    rules[72] = new Rule(-36, new int[]{-37,-38});
    rules[73] = new Rule(-37, new int[]{3});
    rules[74] = new Rule(-37, new int[]{45});
    rules[75] = new Rule(-37, new int[]{46});
    rules[76] = new Rule(-37, new int[]{47});
    rules[77] = new Rule(-37, new int[]{48});
    rules[78] = new Rule(-37, new int[]{37,-27,38});
    rules[79] = new Rule(-37, new int[]{-9});
    rules[80] = new Rule(-37, new int[]{-39,-37});
    rules[81] = new Rule(-35, new int[]{9});
    rules[82] = new Rule(-35, new int[]{10});
    rules[83] = new Rule(-38, new int[]{11});
    rules[84] = new Rule(-38, new int[]{12});
    rules[85] = new Rule(-38, new int[]{13});
    rules[86] = new Rule(-38, new int[]{14});
    rules[87] = new Rule(-32, new int[]{24});
    rules[88] = new Rule(-32, new int[]{25});
    rules[89] = new Rule(-32, new int[]{26});
    rules[90] = new Rule(-32, new int[]{27});
    rules[91] = new Rule(-32, new int[]{28});
    rules[92] = new Rule(-32, new int[]{29});
    rules[93] = new Rule(-30, new int[]{21});
    rules[94] = new Rule(-30, new int[]{22});
    rules[95] = new Rule(-39, new int[]{23});
    rules[96] = new Rule(-39, new int[]{10});
    rules[97] = new Rule(-11, new int[]{32,37,-27,38,-6,-40});
    rules[98] = new Rule(-11, new int[]{32,37,-27,38,-6});
    rules[99] = new Rule(-40, new int[]{33,-6});
    rules[100] = new Rule(-12, new int[]{30,37,-27,38,-6});
    rules[101] = new Rule(-13, new int[]{31,37,3,6,-41,38,-6});
    rules[102] = new Rule(-41, new int[]{-21,8,-21});
  }

  protected override void Initialize() {
    this.InitSpecialTokens((int)Tokens.error, (int)Tokens.EOF);
    this.InitStates(states);
    this.InitRules(rules);
    this.InitNonTerminals(nonTerms);
  }

  protected override void DoAction(int action)
  {
    switch (action)
    {
    }
  }

  protected override string TerminalToString(int terminal)
  {
    if (aliasses != null && aliasses.ContainsKey(terminal))
        return aliasses[terminal];
    else if (((Tokens)terminal).ToString() != terminal.ToString(CultureInfo.InvariantCulture))
        return ((Tokens)terminal).ToString();
    else
        return CharToString((char)terminal);
  }

}
}
